# Generated by Django 4.2.5 on 2024-04-13 15:55

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=50)),
                ('posts', models.CharField(max_length=50)),
                ('is_approved', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('assignment_id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('bus_id', models.AutoField(primary_key=True, serialize=False)),
                ('registration_number', models.CharField(max_length=100)),
                ('bus_number', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BusReservation',
            fields=[
                ('busreservation_id', models.AutoField(primary_key=True, serialize=False)),
                ('registration_number', models.CharField(max_length=50)),
                ('full_name', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=20)),
                ('selected_seats', models.CharField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('complaint_id', models.AutoField(primary_key=True, serialize=False)),
                ('complaint_date', models.DateField(auto_now_add=True)),
                ('complaint_description', models.TextField()),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.assignment')),
            ],
        ),
        migrations.CreateModel(
            name='public_add',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('full_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Terminal',
            fields=[
                ('terminal_id', models.AutoField(primary_key=True, serialize=False)),
                ('terminal_name', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('confirm_password', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('workshop_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('confirm_password', models.CharField(max_length=100)),
                ('terminal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.terminal')),
            ],
        ),
        migrations.CreateModel(
            name='WorkshopComplaint',
            fields=[
                ('workshop_complaint_id', models.AutoField(primary_key=True, serialize=False)),
                ('complaint_description', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.workshop')),
            ],
        ),
        migrations.CreateModel(
            name='Staff_Allocation',
            fields=[
                ('allocation_id', models.AutoField(primary_key=True, serialize=False)),
                ('allocation_date', models.DateField(auto_now_add=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('terminal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocated_staff', to='store.terminal')),
            ],
        ),
        migrations.CreateModel(
            name='SeatPrice',
            fields=[
                ('seat_price_id', models.AutoField(primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seat_prices', to='store.bus')),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('route_id', models.AutoField(primary_key=True, serialize=False)),
                ('source', models.CharField(max_length=100)),
                ('source_time', models.TimeField()),
                ('destination', models.CharField(max_length=100)),
                ('destination_time', models.TimeField()),
                ('date1', models.DateField()),
                ('seat_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocated_route', to='store.bus')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DailyCollection',
            fields=[
                ('dailycollection_id', models.AutoField(primary_key=True, serialize=False)),
                ('collection_date', models.DateField(auto_now_add=True)),
                ('collection_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.assignment')),
                ('staff_allocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.staff_allocation')),
            ],
        ),
        migrations.CreateModel(
            name='ComplaintResponse',
            fields=[
                ('complaint_response_id', models.AutoField(primary_key=True, serialize=False)),
                ('response_description', models.TextField()),
                ('workshop_complaint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.workshopcomplaint')),
            ],
        ),
        migrations.CreateModel(
            name='ComplaintReply',
            fields=[
                ('replay_id', models.AutoField(primary_key=True, serialize=False)),
                ('reply_description', models.TextField()),
                ('complaint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.complaint')),
            ],
        ),
        migrations.AddField(
            model_name='complaint',
            name='staff_allocation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.staff_allocation'),
        ),
        migrations.CreateModel(
            name='BusSeatDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_number', models.PositiveIntegerField()),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seat_details', to='store.bus')),
            ],
        ),
        migrations.CreateModel(
            name='BusAllocation',
            fields=[
                ('allocation_id', models.AutoField(primary_key=True, serialize=False)),
                ('allocation_date', models.DateField(auto_now_add=True)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.bus')),
                ('terminal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.terminal')),
            ],
        ),
        migrations.AddField(
            model_name='bus',
            name='terminal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocated_bus', to='store.terminal'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='bus_allocation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.busallocation'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='staff_allocation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.staff_allocation'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='terminal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.terminal'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
